"use strict";(self.webpackChunknimbly=self.webpackChunknimbly||[]).push([[7751],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},k=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),k=l(n),m=a,u=k["".concat(c,".").concat(m)]||k[m]||p[m]||r;return n?o.createElement(u,i(i({ref:t},d),{},{components:n})):o.createElement(u,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=k;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}k.displayName="MDXCreateElement"},2915:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return d},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return k}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),i=n(9750),s=n(4996),c=["components"],l={title:"The Socket instance (server-side)",sidebar_label:"The Socket instance",sidebar_position:4,slug:"/server-socket-instance/"},d=void 0,p={unversionedId:"categories/Server/server-socket-instance",id:"categories/Server/server-socket-instance",title:"The Socket instance (server-side)",description:"A Socket is the fundamental class for interacting with the client. It inherits all the methods of the Node.js EventEmitter, like emit, on, once or removeListener.",source:"@site/docs/categories/02-Server/server-socket-instance.md",sourceDirName:"categories/02-Server",slug:"/server-socket-instance/",permalink:"/docs/v1/server-socket-instance/",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"The Socket instance (server-side)",sidebar_label:"The Socket instance",sidebar_position:4,slug:"/server-socket-instance/"},sidebar:"sidebar",previous:{title:"The Server instance",permalink:"/docs/v1/server-instance/"},next:{title:"Middlewares",permalink:"/docs/v1/middlewares/"}},k=[{value:"Socket#id",id:"socketid",children:[],level:2},{value:"Socket#handshake",id:"sockethandshake",children:[],level:2},{value:"Socket#rooms",id:"socketrooms",children:[],level:2},{value:"Socket#data",id:"socketdata",children:[],level:2},{value:"Socket#conn",id:"socketconn",children:[],level:2},{value:"Additional attributes",id:"additional-attributes",children:[],level:2},{value:"Socket middlewares",id:"socket-middlewares",children:[],level:2},{value:"Events",id:"events",children:[{value:"<code>disconnect</code>",id:"disconnect",children:[],level:3},{value:"<code>disconnecting</code>",id:"disconnecting",children:[],level:3}],level:2},{value:"Complete API",id:"complete-api",children:[],level:2}],m={toc:k};function u(e){var t=e.components,n=(0,a.Z)(e,c);return(0,r.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"Socket")," is the fundamental class for interacting with the client. It inherits all the methods of the Node.js ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/api/events.html#class-eventemitter"},"EventEmitter"),", like ",(0,r.kt)("a",{parentName:"p",href:"/docs/v1/server-api/#socketemiteventname-args"},"emit"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/v1/server-api/#socketoneventname-callback"},"on"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/v1/server-api/#socketonceeventname-listener"},"once")," or ",(0,r.kt)("a",{parentName:"p",href:"/docs/v1/server-api/#socketremovelistenereventname-listener"},"removeListener"),"."),(0,r.kt)(i.Z,{alt:"Bidirectional communication between server and client",sources:{light:(0,s.Z)("/images/bidirectional-communication-socket.png"),dark:(0,s.Z)("/images/bidirectional-communication-socket-dark.png")},mdxType:"ThemedImage"}),(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("p",null,"Besides:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../04-Events/emitting-events.md#basic-emit"},"emitting")," and ",(0,r.kt)("a",{parentName:"li",href:"../04-Events/listening-to-events.md"},"listening to")," events"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../04-Events/broadcasting-events.md#to-all-connected-clients-except-the-sender"},"broadcasting events")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../04-Events/rooms.md#joining-and-leaving"},"joining and leaving rooms"))),(0,r.kt)("p",null,"The Socket instance has a few attributes that may be of use in your application:"),(0,r.kt)("h2",{id:"socketid"},"Socket#id"),(0,r.kt)("p",null,"Each new connection is assigned a random 20-characters identifier."),(0,r.kt)("p",null,"This identifier is synced with the value on the client-side."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// server-side\nio.on("connection", (socket) => {\n  console.log(socket.id); // ojIckSD2jqNzOqIrAGzL\n});\n\n// client-side\nsocket.on("connect", () => {\n  console.log(socket.id); // ojIckSD2jqNzOqIrAGzL\n});\n')),(0,r.kt)("p",null,"Upon creation, the Socket joins the room identified by its own id, which means you can use it for private messaging:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'io.on("connection", socket => {\n  socket.on("private message", (anotherSocketId, msg) => {\n    socket.to(anotherSocketId).emit("private message", socket.id, msg);\n  });\n});\n')),(0,r.kt)("p",null,"Note: you can't overwrite this identifier, as it is used in several parts of the Socket.IO codebase."),(0,r.kt)("h2",{id:"sockethandshake"},"Socket#handshake"),(0,r.kt)("p",null,"This object contains some details about the handshake that happens at the beginning of the Socket.IO session."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n  headers: /* the headers of the initial request */\n  query: /* the query params of the initial request */\n  auth: /* the authentication payload */\n  time: /* the date of creation (as string) */\n  issued: /* the date of creation (unix timestamp) */\n  url: /* the request URL string */\n  address: /* the ip of the client */\n  xdomain: /* whether the connection is cross-domain */\n  secure: /* whether the connection is secure */\n}\n")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "headers": {\n    "user-agent": "xxxx",\n    "accept": "*/*",\n    "host": "example.com",\n    "connection": "close"\n  },\n  "query": {\n    "EIO": "4",\n    "transport": "polling",\n    "t": "NNjNltH"\n  },\n  "auth": {\n    "token": "123"\n  },\n  "time": "Sun Nov 22 2020 01:33:46 GMT+0100 (Central European Standard Time)",\n  "issued": 1606005226969,\n  "url": "/socket.io/?EIO=4&transport=polling&t=NNjNltH",\n  "address": "::ffff:1.2.3.4",\n  "xdomain": false,\n  "secure": true\n}\n')),(0,r.kt)("h2",{id:"socketrooms"},"Socket#rooms"),(0,r.kt)("p",null,"This is a reference to the ",(0,r.kt)("a",{parentName:"p",href:"../04-Events/rooms.md"},"rooms")," the Socket is currently in."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  console.log(socket.rooms); // Set { <socket.id> }\n  socket.join("room1");\n  console.log(socket.rooms); // Set { <socket.id>, "room1" }\n});\n')),(0,r.kt)("h2",{id:"socketdata"},"Socket#data"),(0,r.kt)("p",null,"An arbitrary object that can be used in conjunction with the ",(0,r.kt)("inlineCode",{parentName:"p"},"fetchSockets()")," utility method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// server A\nio.on("connection", (socket) => {\n  socket.data.username = "alice";\n});\n\n// server B\nconst sockets = await io.fetchSockets();\nconsole.log(sockets[0].data.username); // "alice"\n')),(0,r.kt)("p",null,"More information ",(0,r.kt)("a",{parentName:"p",href:"/docs/v1/server-instance/#utility-methods"},"here"),"."),(0,r.kt)("h2",{id:"socketconn"},"Socket#conn"),(0,r.kt)("p",null,"A reference to the underlying Engine.IO socket (see ",(0,r.kt)("a",{parentName:"p",href:"/docs/v1/how-it-works/"},"here"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  console.log("initial transport", socket.conn.transport.name); // prints "polling"\n\n  socket.conn.once("upgrade", () => {\n    // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n    console.log("upgraded transport", socket.conn.transport.name); // prints "websocket"\n  });\n\n  socket.conn.on("packet", ({ type, data }) => {\n    // called for each packet received\n  });\n\n  socket.conn.on("packetCreate", ({ type, data }) => {\n    // called for each packet sent\n  });\n\n  socket.conn.on("drain", () => {\n    // called when the write buffer is drained\n  });\n\n  socket.conn.on("close", (reason) => {\n    // called when the underlying connection is closed\n  });\n});\n')),(0,r.kt)("h2",{id:"additional-attributes"},"Additional attributes"),(0,r.kt)("p",null,"As long as you do not overwrite any existing attribute, you can attach any attribute to the Socket instance and use it later:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// in a middleware\nio.use(async (socket, next) => {\n  try {\n    const user = await fetchUser(socket);\n    socket.user = user;\n  } catch (e) {\n    next(new Error("unknown user"));\n  }\n});\n\nio.on("connection", (socket) => {\n  console.log(socket.user);\n\n  // in a listener\n  socket.on("set username", (username) => {\n    socket.username = username;\n  });\n});\n\n')),(0,r.kt)("h2",{id:"socket-middlewares"},"Socket middlewares"),(0,r.kt)("p",null,"Those middlewares looks a lot like the usual ",(0,r.kt)("a",{parentName:"p",href:"/docs/v1/middlewares/"},"middlewares"),", except that they are called for each incoming packet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"socket.use(([event, ...args], next) => {\n  // do something with the packet (logging, authorization, rate limiting...)\n  // do not forget to call next() at the end\n  next();\n});\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"next")," method can also be called with an error object. In that case, the event will not reach the registered event handlers and an ",(0,r.kt)("inlineCode",{parentName:"p"},"error")," event will be emitted instead:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  socket.use(([event, ...args], next) => {\n    if (isUnauthorized(event)) {\n      return next(new Error("unauthorized event"));\n    }\n    next();\n  });\n\n  socket.on("error", (err) => {\n    if (err && err.message === "unauthorized event") {\n      socket.disconnect();\n    }\n  });\n});\n')),(0,r.kt)("p",null,"Note: this feature only exists on the server-side. For the client-side, you might be interested in ",(0,r.kt)("a",{parentName:"p",href:"../04-Events/listening-to-events.md#catch-all-listeners"},"catch-all listeners"),"."),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("p",null,"On the server-side, the Socket instance emits two special events:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#disconnect"},(0,r.kt)("inlineCode",{parentName:"a"},"disconnect"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#disconnecting"},(0,r.kt)("inlineCode",{parentName:"a"},"disconnecting")))),(0,r.kt)("h3",{id:"disconnect"},(0,r.kt)("inlineCode",{parentName:"h3"},"disconnect")),(0,r.kt)("p",null,"This event is fired by the Socket instance upon disconnection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  socket.on("disconnect", (reason) => {\n    // ...\n  });\n});\n')),(0,r.kt)("p",null,"Here is the list of possible reasons:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Reason"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"server namespace disconnect")),(0,r.kt)("td",{parentName:"tr",align:null},"The socket was forcefully disconnected with ",(0,r.kt)("a",{parentName:"td",href:"/docs/v1/server-api/#socketdisconnectclose"},"socket.disconnect"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"client namespace disconnect")),(0,r.kt)("td",{parentName:"tr",align:null},"The client has manually disconnected the socket using ",(0,r.kt)("a",{parentName:"td",href:"/docs/v1/client-api/#socketdisconnect"},"socket.disconnect()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"server shutting down")),(0,r.kt)("td",{parentName:"tr",align:null},"The server is, well, shutting down")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ping timeout")),(0,r.kt)("td",{parentName:"tr",align:null},"The client did not send a PONG packet in the ",(0,r.kt)("inlineCode",{parentName:"td"},"pingTimeout")," delay")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"transport close")),(0,r.kt)("td",{parentName:"tr",align:null},"The connection was closed (example: the user has lost connection, or the network was changed from WiFi to 4G)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"transport error")),(0,r.kt)("td",{parentName:"tr",align:null},"The connection has encountered an error")))),(0,r.kt)("h3",{id:"disconnecting"},(0,r.kt)("inlineCode",{parentName:"h3"},"disconnecting")),(0,r.kt)("p",null,"This event is similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"disconnect")," but is fired a bit earlier, when the ",(0,r.kt)("a",{parentName:"p",href:"/docs/v1/server-socket-instance/#socketrooms"},"Socket#rooms")," set is not empty yet"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  socket.on("disconnecting", (reason) => {\n    for (const room of socket.rooms) {\n      if (room !== socket.id) {\n        socket.to(room).emit("user has left", socket.id);\n      }\n    }\n  });\n});\n')),(0,r.kt)("p",null,"Note: those events, along with ",(0,r.kt)("inlineCode",{parentName:"p"},"connect"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"connect_error"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"newListener")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"removeListener"),", are special events that shouldn't be used in your application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// BAD, will throw an error\nsocket.emit("disconnect");\n')),(0,r.kt)("h2",{id:"complete-api"},"Complete API"),(0,r.kt)("p",null,"The complete API exposed by the Socket instance can be found ",(0,r.kt)("a",{parentName:"p",href:"/docs/v1/server-api/#socket"},"here"),"."))}u.isMDXComponent=!0}}]);