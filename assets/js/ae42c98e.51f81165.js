"use strict";(self.webpackChunknimbly=self.webpackChunknimbly||[]).push([[1936],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,k=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return t?r.createElement(k,a(a({ref:n},d),{},{components:t})):r.createElement(k,a({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9477:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],s={title:"Middlewares",sidebar_position:5,slug:"/middlewares/"},l=void 0,c={unversionedId:"categories/Server/middlewares",id:"categories/Server/middlewares",title:"Middlewares",description:"A middleware function is a function that gets executed for every incoming connection.",source:"@site/docs/categories/02-Server/middlewares.md",sourceDirName:"categories/02-Server",slug:"/middlewares/",permalink:"/nimbly/docs/v1/middlewares/",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Middlewares",sidebar_position:5,slug:"/middlewares/"},sidebar:"sidebar",previous:{title:"The Socket instance",permalink:"/nimbly/docs/v1/server-socket-instance/"},next:{title:"Behind a reverse proxy",permalink:"/nimbly/docs/v1/reverse-proxy/"}},d=[{value:"Registering a middleware",id:"registering-a-middleware",children:[],level:2},{value:"Sending credentials",id:"sending-credentials",children:[],level:2},{value:"Handling middleware error",id:"handling-middleware-error",children:[],level:2},{value:"Compatibility with Express middleware",id:"compatibility-with-express-middleware",children:[],level:2}],p={toc:d};function u(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A middleware function is a function that gets executed for every incoming connection."),(0,i.kt)("p",null,"Middleware functions can be useful for:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"logging"),(0,i.kt)("li",{parentName:"ul"},"authentication / authorization"),(0,i.kt)("li",{parentName:"ul"},"rate limiting")),(0,i.kt)("p",null,"Note: this function will be executed only once per connection (even if the connection consists in multiple HTTP requests)."),(0,i.kt)("h2",{id:"registering-a-middleware"},"Registering a middleware"),(0,i.kt)("p",null,"A middleware function has access to the ",(0,i.kt)("a",{parentName:"p",href:"/nimbly/docs/v1/server-socket-instance/"},"Socket instance")," and to the next registered middleware function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'io.use((socket, next) => {\n  if (isValid(socket.request)) {\n    next();\n  } else {\n    next(new Error("invalid"));\n  }\n});\n')),(0,i.kt)("p",null,"You can register several middleware functions, and they will be executed sequentially:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'io.use((socket, next) => {\n  next();\n});\n\nio.use((socket, next) => {\n  next(new Error("thou shall not pass"));\n});\n\nio.use((socket, next) => {\n  // not executed, since the previous middleware has returned an error\n  next();\n});\n')),(0,i.kt)("p",null,"Please make sure to call ",(0,i.kt)("inlineCode",{parentName:"p"},"next()")," in any case. Otherwise, the connection will be left hanging until it is closed after a given timeout."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Important note"),": the Socket instance is not actually connected when the middleware gets executed, which means that no ",(0,i.kt)("inlineCode",{parentName:"p"},"disconnect")," event will be emitted if the connection eventually fails."),(0,i.kt)("p",null,"For example, if the client manually closes the connection:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// server-side\nio.use((socket, next) => {\n  setTimeout(() => {\n    // next is called after the client disconnection\n    next();\n  }, 1000);\n\n  socket.on("disconnect", () => {\n    // not triggered\n  });\n});\n\nio.on("connection", (socket) => {\n  // not triggered\n});\n\n// client-side\nconst socket = io();\nsetTimeout(() => {\n  socket.disconnect();\n}, 500);\n')),(0,i.kt)("h2",{id:"sending-credentials"},"Sending credentials"),(0,i.kt)("p",null,"The client can send credentials with the ",(0,i.kt)("inlineCode",{parentName:"p"},"auth")," option:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// plain object\nconst socket = io({\n  auth: {\n    token: "abc"\n  }\n});\n\n// or with a function\nconst socket = io({\n  auth: (cb) => {\n    cb({\n      token: "abc"\n    });\n  }\n});\n')),(0,i.kt)("p",null,"Those credentials can be accessed in the ",(0,i.kt)("a",{parentName:"p",href:"/nimbly/docs/v1/server-socket-instance/#sockethandshake"},"handshake")," object on the server-side:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"io.use((socket, next) => {\n  const token = socket.handshake.auth.token;\n  // ...\n});\n")),(0,i.kt)("h2",{id:"handling-middleware-error"},"Handling middleware error"),(0,i.kt)("p",null,"If the ",(0,i.kt)("inlineCode",{parentName:"p"},"next")," method is called with an Error object, the connection will be refused and the client will receive an ",(0,i.kt)("inlineCode",{parentName:"p"},"connect_error")," event."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// client-side\nsocket.on("connect_error", (err) => {\n  console.log(err.message); // prints the message associated with the error\n});\n')),(0,i.kt)("p",null,"You can attach additional details to the Error object:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// server-side\nio.use((socket, next) => {\n  const err = new Error("not authorized");\n  err.data = { content: "Please retry later" }; // additional details\n  next(err);\n});\n\n// client-side\nsocket.on("connect_error", (err) => {\n  console.log(err instanceof Error); // true\n  console.log(err.message); // not authorized\n  console.log(err.data); // { content: "Please retry later" }\n});\n')),(0,i.kt)("h2",{id:"compatibility-with-express-middleware"},"Compatibility with Express middleware"),(0,i.kt)("p",null,"Most existing ",(0,i.kt)("a",{parentName:"p",href:"http://expressjs.com/en/resources/middleware.html"},"Express middleware")," modules should be compatible with Socket.IO, you just need a little wrapper function to make the method signatures match:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const wrap = middleware => (socket, next) => middleware(socket.request, {}, next);\n")),(0,i.kt)("p",null,"The middleware functions that end the request-response cycle and do not call ",(0,i.kt)("inlineCode",{parentName:"p"},"next()")," will not work though."),(0,i.kt)("p",null,"Example with ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/express-session"},"express-session"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const session = require("express-session");\n\nio.use(wrap(session({ secret: "cats" })));\n\nio.on("connection", (socket) => {\n  const session = socket.request.session;\n});\n')),(0,i.kt)("p",null,"Example with ",(0,i.kt)("a",{parentName:"p",href:"http://www.passportjs.org/"},"Passport"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const session = require("express-session");\nconst passport = require("passport");\n\nio.use(wrap(session({ secret: "cats" })));\nio.use(wrap(passport.initialize()));\nio.use(wrap(passport.session()));\n\nio.use((socket, next) => {\n  if (socket.request.user) {\n    next();\n  } else {\n    next(new Error("unauthorized"))\n  }\n});\n')),(0,i.kt)("p",null,"A complete example with Passport can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/socketio/socket.io/tree/master/examples/passport-example"},"here"),"."))}u.isMDXComponent=!0}}]);