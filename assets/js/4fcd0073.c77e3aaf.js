"use strict";(self.webpackChunknimbly=self.webpackChunknimbly||[]).push([[678],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var l=n.createContext({}),a=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=a(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,c=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=a(r),d=c,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||i;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function d(e,t){var r=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var i=r.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:c,o[1]=s;for(var a=2;a<i;a++)o[a]=r[a];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4452:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return a},toc:function(){return p}});var n=r(7462),c=r(3366),i=(r(7294),r(3905)),o=["components"],s={title:"Client Interceptors",sidebar_position:4,slug:"/client-interceptors/"},l=void 0,a={unversionedId:"categories/Interceptors/client",id:"categories/Interceptors/client",title:"Client Interceptors",description:"Here is the list of Client interceptor definition examples.",source:"@site/docs/categories/04-Interceptors/client.md",sourceDirName:"categories/04-Interceptors",slug:"/client-interceptors/",permalink:"/nimbly/docs/v1/client-interceptors/",tags:[],version:"current",lastUpdatedAt:1651955421,formattedLastUpdatedAt:"5/7/2022",sidebarPosition:4,frontMatter:{title:"Client Interceptors",sidebar_position:4,slug:"/client-interceptors/"},sidebar:"sidebar",previous:{title:"API Interceptors",permalink:"/nimbly/docs/v1/api-interceptors/"},next:{title:"Installation",permalink:"/nimbly/docs/v1/cli-installation/"}},p=[{value:"Intercept All Before",id:"intercept-all-before",children:[],level:3},{value:"Intercept Specific Before",id:"intercept-specific-before",children:[],level:3},{value:"Intercept Specific Before - Interceptor Class",id:"intercept-specific-before---interceptor-class",children:[],level:3},{value:"Intercept All After",id:"intercept-all-after",children:[],level:3},{value:"Intercept Specific After",id:"intercept-specific-after",children:[],level:3},{value:"Intercept Specific After - Interceptor Class",id:"intercept-specific-after---interceptor-class",children:[],level:3}],u={toc:p};function f(e){var t=e.components,r=(0,c.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Here is the list of Client interceptor definition examples."),(0,i.kt)("h3",{id:"intercept-all-before"},"Intercept All Before"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Intercept all service calls\nconst usersNimble = new Nimble()\n  .ofRemote(UserService, host)\n  .interceptAllCalls(({setHeader, getHeader, setBody, getBody}) => {\n    setHeader('Authorization', 'Bearer <token>');\n  });\n")),(0,i.kt)("h3",{id:"intercept-specific-before"},"Intercept Specific Before"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Intercept only specific method calls\nconst usersNimble = new Nimble()\n  .ofRemote(UserService, host)\n  .interceptCalls({\n    userService: {\n      getTest({setHeader, getHeader, setBody, getBody}) {\n        setBody({ ...getBody(), timestamp: new Date() });\n      }\n    }\n  });\n")),(0,i.kt)("h3",{id:"intercept-specific-before---interceptor-class"},"Intercept Specific Before - Interceptor Class"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Define interceptors with an interceptor class\nclass UserServiceCallInterceptor {\n  getTest({setHeader, getHeader, setBody, getBody}) {\n    setHeader('classCallInterceptor', 'Works!')\n  }\n}\nconst usersNimble = new Nimble()\n  .ofRemote(UserService, host)\n  .interceptCalls({\n    userService: UserServiceCallInterceptor\n  });\n")),(0,i.kt)("h3",{id:"intercept-all-after"},"Intercept All After"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Intercept all service results\nconst usersNimble = new Nimble()\n  .ofRemote(UserService, host)\n  .interceptAllResults(({setHeader, getHeader, setBody, getBody}) => {\n    validateBody(getBody());\n    setToken(getHeader('Token'));\n  });\n")),(0,i.kt)("h3",{id:"intercept-specific-after"},"Intercept Specific After"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Intercept only specific method results\nconst usersNimble = new Nimble()\n  .ofRemote(UserService, host)\n  .interceptResults({\n    userService: {\n      getTest({setHeader, getHeader, setBody, getBody}) {\n        setBody({ ...getBody(), count: getBody().items.length });\n      }\n    }\n  });\n")),(0,i.kt)("h3",{id:"intercept-specific-after---interceptor-class"},"Intercept Specific After - Interceptor Class"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Define interceptors with an interceptor class\nclass UserServiceResultInterceptor {\n  getTest({setHeader, getHeader, setBody, getBody}) {\n    setHeader('classResultInterceptor', 'Works!')\n  }\n}\nconst usersNimble = new Nimble()\n  .ofRemote(UserService, host)\n  .interceptResults({\n    userService: UserServiceResultInterceptor\n  });\n")))}f.isMDXComponent=!0}}]);