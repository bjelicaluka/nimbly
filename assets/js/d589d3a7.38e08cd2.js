"use strict";(self.webpackChunknimbly=self.webpackChunknimbly||[]).push([[162],{3905:function(e,n,t){t.d(n,{Zo:function(){return o},kt:function(){return d}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=a.createContext({}),s=function(e){var n=a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},o=function(e){var n=s(e.components);return a.createElement(m.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),u=s(t),d=r,g=u["".concat(m,".").concat(d)]||u[d]||c[d]||i;return t?a.createElement(g,l(l({ref:n},o),{},{components:t})):a.createElement(g,l({ref:n},o))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=u;var p={};for(var m in n)hasOwnProperty.call(n,m)&&(p[m]=n[m]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var s=2;s<i;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9390:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return o}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),l=["components"],p={title:"Getting Started",slug:"/getting-started/"},m=void 0,s={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"NPM",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started/",permalink:"/nimbly/docs/v1/getting-started/",tags:[],version:"current",lastUpdatedAt:1654282889,formattedLastUpdatedAt:"6/3/2022",frontMatter:{title:"Getting Started",slug:"/getting-started/"}},o=[{value:"Setting up the server",id:"setting-up-the-server",children:[],level:2},{value:"Setting up the client",id:"setting-up-the-client",children:[],level:2}],c={toc:o};function u(e){var n=e.components,p=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,p,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://nodei.co/npm/nimbly-client/"},(0,i.kt)("img",{parentName:"a",src:"https://nodei.co/npm/nimbly-client.png",alt:"NPM"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://nodei.co/npm/nimbly-api/"},(0,i.kt)("img",{parentName:"a",src:"https://nodei.co/npm/nimbly-api.png",alt:"NPM"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://nodei.co/npm/nimbly-cli/"},(0,i.kt)("img",{parentName:"a",src:"https://nodei.co/npm/nimbly-cli.png",alt:"NPM"}))),(0,i.kt)("h2",{id:"setting-up-the-server"},"Setting up the server"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Initialize the project")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm init -y\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/nimbly/docs/v1/server-installation/"},"Install")," ",(0,i.kt)("inlineCode",{parentName:"li"},"nimbly-api")," library")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -S nimbly-api\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Implement Example ",(0,i.kt)("a",{parentName:"li",href:"/nimbly/docs/v1/service-class/"},"service"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// example.ts\nimport { Controller, Get, Post, Put, Delete, Query, Path, Body, string, number, boolean, type, Returns, ReturnsArrayOf } from \"nimbly-api\";\n\nclass Example {\n  @string name: string;\n  @number age: number;\n}\n\n@Controller('/examples')\nexport class ExampleService {\n  @Get()\n  @ReturnsArrayOf(Example)\n  async getAll(@Query('pageNumber') @number pageNumber: number, @Query('pageSize') @number pageSize: number): Promise<Example[]> {\n    return [];\n  }\n  @Get('/:id')\n  @Returns(Example)\n  async getById(@Query('includeDetails') @boolean includeDetails: boolean, @Path('id') @string id: string): Promise<Example> {\n    return;\n  }\n  @Post()\n  @Returns(Example)\n  async add(@Body() @type(Example) example: Example): Promise<Example> {\n    return example;\n  }\n  @Put('/:id')\n  @Returns(Example)\n  async update(@Path('id') @string id: string, @Body() @type(Example) example: Example): Promise<Example> {\n    return example;\n  }\n  @Delete('/:id')\n  @Returns(Example)\n  async delete(@Path('id') @string id: string): Promise<Example> {\n    return;\n  }\n}\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Create a ",(0,i.kt)("a",{parentName:"li",href:"/nimbly/docs/v1/nimble/"},"Nimble")," of services and the ",(0,i.kt)("a",{parentName:"li",href:"/nimbly/docs/v1/nimbly-api/"},"NimblyApi"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// index.ts\nimport { Nimble, NimblyApi } from \"nimbly-api\";\nimport { ExampleService } from \"./example\";\n\nconst nimble = new Nimble()\n  .ofLocal(ExampleService);\n\nconst api = new NimblyApi({\n  nimblyInfo: {\n    name: 'Example Microservice',\n    version: '1.0.0',\n    description: 'This is an example microservice.'\n  },\n}).from(nimble);\n\nconst PORT = 3000;\napi.listen(PORT, () => console.log(`Started listening on ${PORT}`));\n\ntype NimbleServices = {\n  exampleService: ExampleService;\n}\n\n// The instances are available for custom usage\nconst { exampleService } = usersNimble.services();\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"5 routes have been registered")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"GET /api/examples"),(0,i.kt)("li",{parentName:"ul"},"GET /api/examples/{id}"),(0,i.kt)("li",{parentName:"ul"},"POST /api/examples"),(0,i.kt)("li",{parentName:"ul"},"PUT /api/examples/{id}"),(0,i.kt)("li",{parentName:"ul"},"DELETE /api/examples/{id}")))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:t(2881).Z,width:"1435",height:"691"})),(0,i.kt)("h2",{id:"setting-up-the-client"},"Setting up the client"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Initialize the project")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm init -y\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/nimbly/docs/v1/client-installation/"},"Install")," ",(0,i.kt)("inlineCode",{parentName:"li"},"nimbly-client")," library")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -S nimbly-client\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/nimbly/docs/v1/cli-installation/"},"Install")," ",(0,i.kt)("inlineCode",{parentName:"li"},"nimbly-cli")," CLI")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -g nimbly-cli\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/nimbly/docs/v1/cli-usage/#typescript"},"Generate")," TypeScript client code")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"nimbly -l ts -h http://localhost:3000 -o ./services/example\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"2 files have been generated")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"services/example/index.ts"),(0,i.kt)("li",{parentName:"ul"},"services/example/ExampleService.ts")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// services/example/index.ts\n\n// Auto-generated by Nimbly Client CLI\nimport { Nimble } from 'nimbly-client';\nimport { ExampleService as ExampleServiceLocal } from './ExampleService';\n\nconst host = \"http://localhost:3000\";\n\nexport type NimbleServices = {\n  exampleService: ExampleServiceLocal;\n  \n};\n\nexport const {\n  exampleService,\n  \n}: NimbleServices = new Nimble()\n  .ofRemote(ExampleServiceLocal, host)\n  .services();\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// services/example/ExampleService.ts\n\n// Auto-generated by Nimbly Client CLI\nimport {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Query,\n  Path,\n  Body\n} from 'nimbly-client';\n\n\nexport class Example {\n  name: string;\n  age: number\n}\n\n\n@Controller('/examples')\nexport class ExampleService {\n \n  @Get('/')\n  async getAll(@Query('pageNumber') pageNumber: number, @Query('pageSize') pageSize: number) {}\n \n  @Get('/:id')\n  async getById(@Query('includeDetails') includeDetails: string, @Path('id') id: boolean) {}\n \n  @Post('/')\n  async add(@Body() body: Example) {}\n \n  @Put('/:id')\n  async update(@Path('id') id: string, @Body() body: Example) {}\n \n  @Delete('/:id')\n  async delete(@Path('id') id: string) {}\n\n}\n")),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Use the ExampleService elsewhere")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// somewhere.ts\n\nimport { exampleService } from './services/example';\n\nexampleService.getAll().then(console.log).catch(console.log);\n")))}u.isMDXComponent=!0},2881:function(e,n,t){n.Z=t.p+"assets/images/example_swagger-73bff255d4b029c2144aef5f96bc61e0.png"}}]);