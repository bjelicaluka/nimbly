"use strict";(self.webpackChunknimbly=self.webpackChunknimbly||[]).push([[35],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return p}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),o=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=o(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),v=o(t),p=i,b=v["".concat(s,".").concat(p)]||v[p]||m[p]||l;return t?r.createElement(b,a(a({ref:n},u),{},{components:t})):r.createElement(b,a({ref:n},u))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=v;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var o=2;o<l;o++)a[o]=t[o];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}v.displayName="MDXCreateElement"},8215:function(e,n,t){var r=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:i},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(7462),i=t(7294),l=t(2389),a=t(9548),c=t(6010),s="tabItem_LplD";function o(e){var n,t,l,o=e.lazy,u=e.block,m=e.defaultValue,v=e.values,p=e.groupId,b=e.className,d=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=v?v:d.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),h=(0,a.lx)(f,(function(e,n){return e.value===n.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(n=null!=m?m:null==(t=d.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(l=d[0])?void 0:l.props.value;if(null!==y&&!f.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,a.UB)(),S=g.tabGroupChoices,N=g.setTabGroupChoices,k=(0,i.useState)(y),A=k[0],T=k[1],w=[],O=(0,a.o5)().blockElementScrollPositionUntilNextRender;if(null!=p){var j=S[p];null!=j&&j!==A&&f.some((function(e){return e.value===j}))&&T(j)}var x=function(e){var n=e.currentTarget,t=w.indexOf(n),r=f[t].value;r!==A&&(O(n),T(r),null!=p&&N(p,r))},E=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=w.indexOf(e.currentTarget)+1;t=w[r]||w[0];break;case"ArrowLeft":var i=w.indexOf(e.currentTarget)-1;t=w[i]||w[w.length-1]}null==(n=t)||n.focus()};return i.createElement("div",{className:"tabs-container"},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":u},b)},f.map((function(e){var n=e.value,t=e.label,l=e.attributes;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:A===n?0:-1,"aria-selected":A===n,key:n,ref:function(e){return w.push(e)},onKeyDown:E,onFocus:x,onClick:x},l,{className:(0,c.Z)("tabs__item",s,null==l?void 0:l.className,{"tabs__item--active":A===n})}),null!=t?t:n)}))),o?(0,i.cloneElement)(d.filter((function(e){return e.props.value===A}))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},d.map((function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==A})}))))}function u(e){var n=(0,l.Z)();return i.createElement(o,(0,r.Z)({key:String(n)},e))}},3532:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return v}});var r=t(7462),i=t(3366),l=(t(7294),t(3905)),a=t(9877),c=t(8215),s=["components"],o={title:"Nimble",sidebar_position:7,slug:"/nimble/"},u=void 0,m={unversionedId:"categories/nimble",id:"categories/nimble",title:"Nimble",description:"What Nibmle is",source:"@site/docs/categories/nimble.md",sourceDirName:"categories",slug:"/nimble/",permalink:"/nimbly/docs/v1/nimble/",tags:[],version:"current",lastUpdatedAt:1654282889,formattedLastUpdatedAt:"6/3/2022",sidebarPosition:7,frontMatter:{title:"Nimble",sidebar_position:7,slug:"/nimble/"},sidebar:"sidebar",previous:{title:"Types Configuration",permalink:"/nimbly/docs/v1/service-class-types-config/"},next:{title:"NimblyApi",permalink:"/nimbly/docs/v1/nimbly-api/"}},v=[{value:"What Nibmle is",id:"what-nibmle-is",children:[],level:2},{value:"Local Services",id:"local-services",children:[],level:2},{value:"Remote Services",id:"remote-services",children:[],level:2}],p={toc:v};function b(e){var n=e.components,t=(0,i.Z)(e,s);return(0,l.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"what-nibmle-is"},"What Nibmle is"),(0,l.kt)("p",null,"Nimble holds a set of related service classes. It is responsible for handling their lifecycle and managing their dependencies."),(0,l.kt)("p",null,"Nimble can hold ",(0,l.kt)("a",{parentName:"p",href:"#local-services"},"Local")," or ",(0,l.kt)("a",{parentName:"p",href:"#remote-services"},"Remote")," services."),(0,l.kt)("h2",{id:"local-services"},"Local Services"),(0,l.kt)("p",null,"Local services are ones that are running in the same process as Nimble."),(0,l.kt)(a.Z,{groupId:"lang",mdxType:"Tabs"},(0,l.kt)(c.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'const { Nimble } = require("nimbly-client"); // or "nimbly-api"\n\nclass UserService {\n  async getAll() {\n    return [];\n  }\n}\n\nclass AccountService {\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAll() {\n    const accounts = [];\n    const users = await this.userService.getAll();\n    return users.map(user => ({\n      ...user,\n      account: accounts.find(acc => acc.id === user.accountId)\n    }));\n  }\n}\n\n// Creating the Nimble \nconst nimble = new Nimble().addLocalServices(UserService, AccountService);\n\n// Getting the services out of the Nimble.\nconst { accountService } = nimble.getAllServices();\n'))),(0,l.kt)(c.Z,{value:"mjs",label:"ES modules",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'import { Nimble } from "nimbly-client"; // or "nimbly-api"\n\nclass UserService {\n  async getAll() {\n    return [];\n  }\n}\n\nclass AccountService {\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAll() {\n    const accounts = [];\n    const users = await this.userService.getAll();\n    return users.map(user => ({\n      ...user,\n      account: accounts.find(acc => acc.id === user.accountId)\n    }));\n  }\n}\n\n// Creating the Nimble \nconst nimble = new Nimble().addLocalServices(UserService, AccountService);\n\n// Getting the services out of the Nimble.\nconst { accountService } = nimble.getAllServices();\n'))),(0,l.kt)(c.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { Nimble } from "nimbly-client"; // or "nimbly-api"\n\ntype NimbleServices = {\n  userService: UserService;\n  accountService: AccountService;\n}\n\nclass UserService {\n  async getAll(): any[] {\n    return [];\n  }\n}\n\nclass AccountService {\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAll(): any[] {\n    const accounts = [];\n    const users = await this.userService.getAll();\n    return users.map(user => ({\n      ...user,\n      account: accounts.find(acc => acc.id === user.accountId)\n    }));\n  }\n}\n\n// Creating the Nimble \nconst nimble = new Nimble().addLocalServices(UserService, AccountService);\n\n// Getting the services out of the Nimble\nconst { accountService }: NimbleServices = nimble.getAllServices();\n')))),(0,l.kt)("h2",{id:"remote-services"},"Remote Services"),(0,l.kt)("p",null,"Remote services are, as the name suggests, running in a different process, or on a different server. Methods of a remote service, that is in a Nimble do not require any implementation code, but do require the URL of the server they are running on."),(0,l.kt)(a.Z,{groupId:"lang",mdxType:"Tabs"},(0,l.kt)(c.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'const { Nimble } = require("nimbly-client"); // or "nimbly-api"\n\nclass UserService {\n  async getAll() {}\n}\n\nclass AccountService {\n  async getAll() {}\n}\n\n// Creating the Nimble \nconst nimble = new Nimble()\n  .addRemoteServices("http://localhost:3000", UserService, AccountService);\n\n// Getting the services out of the Nimble.\nconst { accountService } = nimble.getAllServices();\n'))),(0,l.kt)(c.Z,{value:"mjs",label:"ES modules",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'import { Nimble } from "nimbly-client"; // or "nimbly-api"\n\nclass UserService {\n  async getAll() {\n    return [];\n  }\n}\n\nclass AccountService {\n  async getAll() {}\n}\n\n// Creating the Nimble \nconst nimble = new Nimble()\n  .addRemoteServices("http://localhost:3000", UserService, AccountService);\n\n// Getting the services out of the Nimble.\nconst { accountService } = nimble.getAllServices();\n'))),(0,l.kt)(c.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { Nimble } from "nimbly-client"; // or "nimbly-api"\n\ntype NimbleServices = {\n  userService: UserService;\n  accountService: AccountService;\n}\n\nclass UserService {\n  async getAll(): any[] {}\n}\n\nclass AccountService {\n  async getAll(): any[] {}\n}\n\n// Creating the Nimble \nconst nimble = new Nimble()\n  .addRemoteServices("http://localhost:3000", UserService, AccountService);\n\n// Getting the services out of the Nimble\nconst { accountService }: NimbleServices = nimble.getAllServices();\n')))),(0,l.kt)("p",null,"Nimble implicitly creates a ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"},"Proxy")," for each service that gets the results of method calls over HTTP."))}b.isMDXComponent=!0}}]);